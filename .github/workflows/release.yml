name: Release Packages

on:
  push:
    branches: [ main ]

jobs:
  BumpVersion:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
    outputs:
      changes: ${{ steps.version.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: latest
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: pnpm
          registry-url: 'https://npm.pkg.github.com'
          scope: '@insight-path'
      
      - name: Git Identity
        shell: bash
        run: |
          git config --global user.name 'operations'
          git config --global user.email 'operations@insightspath.fr'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm -r install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Version packages
        shell: bash
        run: | 
          pnpm run nx:version:all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Build packages
        run: pnpm run nx:build:all

      - name: Publish packages
        shell: bash
        run: | 
          pnpm -r publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      